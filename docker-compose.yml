version: "3.8"
networks:
  app-network:
    driver: bridge
services:
  nginx:
    container_name: nginx
    build:
      context: ./docker/nginx
      dockerfile: nginx.dockerfile
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./src:/var/www
    depends_on:
      - php
      - mysql
      - composer
      - npm
    networks:
      - app-network
  php:
    container_name: php
    build:
      context: ./docker/php
      dockerfile: php.dockerfile
    networks:
      - app-network
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - ./src:/var/www
  composer:
    container_name: composer
    build:
      context: ./docker/composer
      dockerfile: composer.dockerfile
    networks:
      - app-network
    volumes:
      - ./src:/var/www
  mysql:
    image: mysql:8.0.27
    container_name: mysql
    tty: true
    networks:
      - app-network
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: '$$Uu946!'
      MYSQL_DATABASE: laravel_crud_example
      MYSQL_USER: admin
      MYSQL_PASSWORD: 'jksjhd7cmds4#'
    ports:
      - "3306:3306"
    volumes:
      - ./database/mysql:/var/lib/mysql
  npm:
    container_name: npm
    build:
      context: ./docker/npm
      dockerfile: npm.dockerfile
    ports:
      - "3000:3000"
      - "3001:3001"
    networks:
      - app-network
    volumes:
      - ./src:/var/www